// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet-postgres
{
    "name": "C# (.NET) and PostgreSQL",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "mounts": [
        "source=${localEnv:HOME}${localEnv:USERPROFILE},target=/host-home-folder,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/../app-data,target=/data,type=bind,consistency=cached"
    ],

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Configure tool-specific properties.
	// "customizations": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001, 5432],
	// "portsAttributes": {
	//		"5001": {
	//			"protocol": "https"
	//		}
	// }

    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "bash ./.devcontainer/post-create-command.sh",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root",
	"secrets": {
		"OPENAI_APIKEY": {
			"description": "OPEN AI api key. Should be stored in a file ./devcontainer.env"
		}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-dotnettools.csdevkit",
                "Gruntfuggly.todo-tree",
                "GitHub.copilot"
            ]
        }
    },
}
